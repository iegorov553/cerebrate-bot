#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è 10 –ø—Ä–æ–±–ª–µ–º —Å —Ö–∞—Ä–¥–∫–æ–¥–æ–º.
"""

import re
from pathlib import Path
from typing import Dict, List

class RemainingHardcodeFixer:
    def __init__(self):
        # –û—Å—Ç–∞–≤—à–∏–µ—Å—è –ø—Ä–æ–±–ª–µ–º—ã –∏–∑ —Ç–µ—Å—Ç–æ–≤
        self.remaining_fixes = [
            {
                'file': 'bot/handlers/admin_conversations.py',
                'line': 211,
                'old': 'text="‚è∞ **–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏ –∏—Å—Ç–µ–∫–ª–æ**\\n\\n–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /broadcast –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–Ω–æ–≤–æ."',
                'new': 'text=translator.translate("broadcast.timeout_message")',
                'key': 'broadcast.timeout_message'
            },
            {
                'file': 'bot/handlers/rate_limit_handler.py',
                'line': 49,
                'old': 'f"üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {stats[\'current_count\']}/{stats[\'max_requests\']}\\n"',
                'new': 'f"{translator.translate(\'rate_limit.usage_count\', current=stats[\'current_count\'], max=stats[\'max_requests\'])}\\n"',
                'key': 'rate_limit.usage_count'
            },
            {
                'file': 'bot/handlers/rate_limit_handler.py',
                'line': 51,
                'old': 'f"üîÑ –û–∫–Ω–æ —Å–±—Ä–æ—Å–∞: {stats[\'window_seconds\']} —Å–µ–∫.\\n\\n"',
                'new': 'f"{translator.translate(\'rate_limit.reset_window\', seconds=stats[\'window_seconds\'])}\\n\\n"',
                'key': 'rate_limit.reset_window'
            },
            {
                'file': 'bot/handlers/rate_limit_handler.py',
                'line': 56,
                'old': 'InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu_main")',
                'new': 'InlineKeyboardButton(translator.translate("menu.back_main"), callback_data="menu_main")',
                'key': None  # Already exists
            },
            {
                'file': 'bot/handlers/rate_limit_handler.py',
                'line': 57,
                'old': 'InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="menu_help")',
                'new': 'InlineKeyboardButton(translator.translate("menu.help"), callback_data="menu_help")',
                'key': None  # Already exists
            },
            {
                'file': 'bot/handlers/rate_limit_handler.py',
                'line': 71,
                'old': 'await update.callback_query.answer("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤!")',
                'new': 'await update.callback_query.answer(translator.translate("rate_limit.exceeded_alert"))',
                'key': 'rate_limit.exceeded_alert'
            },
            {
                'file': 'bot/handlers/admin_handlers.py',
                'line': 60,
                'old': 'f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats[\'total\']}\\n"',
                'new': 'f"{translator.translate(\'admin.total_users\', total=stats[\'total\'])}\\n"',
                'key': None  # Already exists
            },
            {
                'file': 'bot/handlers/admin_handlers.py',
                'line': 61,
                'old': 'f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {stats[\'active\']} ({active_percentage:.1f}%)\\n"',
                'new': 'f"{translator.translate(\'admin.active_users\', active=stats[\'active\'], percentage=active_percentage)}\\n"',
                'key': None  # Already exists
            },
            {
                'file': 'bot/handlers/admin_handlers.py',
                'line': 62,
                'old': 'f"üÜï –ù–æ–≤—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é: {stats[\'new_week\']}\\n\\n"',
                'new': 'f"{translator.translate(\'admin.new_users_week\', count=stats[\'new_week\'])}\\n\\n"',
                'key': None  # Already exists
            },
            {
                'file': 'bot/handlers/admin_handlers.py',
                'line': 63,
                'old': 'f"üìà –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {\'–í—ã—Å–æ–∫–∞—è\' if active_percentage > 50 else \'–°—Ä–µ–¥–Ω—è—è\' if active_percentage > 25 else \'–ù–∏–∑–∫–∞—è\'}"',
                'new': 'f"{translator.translate(\'admin.activity_level\', level=translator.translate(\'common.high\' if active_percentage > 50 else \'common.medium\' if active_percentage > 25 else \'common.low\'))}"',
                'key': None  # Already exists
            },
            {
                'file': 'bot/handlers/error_handler.py',
                'line': 55,
                'old': 'text="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."',
                'new': 'text=translator.translate("errors.general_with_admin")',
                'key': 'errors.general_with_admin'
            }
        ]
        
        # –ù–æ–≤—ã–µ –∫–ª—é—á–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
        self.new_translation_keys = {
            'broadcast.timeout_message': {
                'ru': '‚è∞ **–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏ –∏—Å—Ç–µ–∫–ª–æ**\n\n–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /broadcast –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–Ω–æ–≤–æ.',
                'en': '‚è∞ **Broadcast creation time expired**\n\nSession ended. Use /broadcast to start over.',
                'es': '‚è∞ **Tiempo de creaci√≥n de difusi√≥n expirado**\n\nSesi√≥n terminada. Use /broadcast para comenzar de nuevo.'
            },
            'rate_limit.usage_count': {
                'ru': 'üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {current}/{max}',
                'en': 'üìä Used: {current}/{max}',
                'es': 'üìä Usado: {current}/{max}'
            },
            'rate_limit.reset_window': {
                'ru': 'üîÑ –û–∫–Ω–æ —Å–±—Ä–æ—Å–∞: {seconds} —Å–µ–∫.',
                'en': 'üîÑ Reset window: {seconds} sec.',
                'es': 'üîÑ Ventana de reinicio: {seconds} seg.'
            },
            'rate_limit.exceeded_alert': {
                'ru': '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤!',
                'en': 'Rate limit exceeded!',
                'es': '¬°L√≠mite de solicitudes excedido!'
            },
            'errors.general_with_admin': {
                'ru': '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.',
                'en': '‚ùå An error occurred. Try later or contact administrator.',
                'es': '‚ùå Ocurri√≥ un error. Int√©ntalo m√°s tarde o contacta al administrador.'
            }
        }
    
    def add_translations(self):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã –≤ —Ñ–∞–π–ª—ã."""
        import json
        
        locale_dir = Path('bot/i18n/locales')
        
        for lang in ['ru', 'en', 'es']:
            locale_file = locale_dir / f'{lang}.json'
            
            if not locale_file.exists():
                continue
                
            with open(locale_file, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∫–ª—é—á–∏
            for key, translations in self.new_translation_keys.items():
                if lang in translations:
                    # –†–∞–∑–±–∏–≤–∞–µ–º –∫–ª—é—á –Ω–∞ —á–∞—Å—Ç–∏ –¥–ª—è nested —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
                    parts = key.split('.')
                    current = data
                    
                    # –°–æ–∑–¥–∞–µ–º nested —Å—Ç—Ä—É–∫—Ç—É—Ä—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                    for part in parts[:-1]:
                        if part not in current:
                            current[part] = {}
                        current = current[part]
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
                    current[parts[-1]] = translations[lang]
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            with open(locale_file, 'w', encoding='utf-8') as f:
                json.dump(data, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(self.new_translation_keys)} –Ω–æ–≤—ã—Ö –∫–ª—é—á–µ–π")
    
    def fix_file(self, file_path: str) -> int:
        """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª."""
        path = Path(file_path)
        if not path.exists():
            return 0
            
        with open(path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        fixes_count = 0
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞
        for fix in self.remaining_fixes:
            if fix['file'] == file_path:
                # –ò—â–µ–º –∏ –∑–∞–º–µ–Ω—è–µ–º
                old_pattern = fix['old']
                new_replacement = fix['new']
                
                # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã regex
                old_escaped = re.escape(old_pattern)
                
                if re.search(old_escaped, content):
                    content = re.sub(old_escaped, new_replacement, content)
                    fixes_count += 1
                    print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: {old_pattern[:50]}...")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if content != original_content:
            with open(path, 'w', encoding='utf-8') as f:
                f.write(content)
            
            print(f"‚úÖ –§–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω: {file_path}")
        
        return fixes_count
    
    def fix_all_remaining(self):
        """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø—Ä–æ–±–ª–µ–º—ã."""
        total_fixes = 0
        
        # –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        files_to_fix = set(fix['file'] for fix in self.remaining_fixes)
        
        for file_path in files_to_fix:
            fixes = self.fix_file(file_path)
            total_fixes += fixes
        
        return total_fixes

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    fixer = RemainingHardcodeFixer()
    
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø—Ä–æ–±–ª–µ–º —Å —Ö–∞—Ä–¥–∫–æ–¥–æ–º...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
    fixer.add_translations()
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
    total_fixes = fixer.fix_all_remaining()
    
    print(f"\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø—Ä–æ–±–ª–µ–º: {total_fixes}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\nüß™ –ü—Ä–æ–≤–µ—Ä—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
    import os
    result = os.system("python3 -m pytest tests/test_no_hardcoded_text.py::TestNoHardcodedText::test_no_hardcoded_russian_text_in_handlers -v")
    
    if result == 0:
        print("\nüéâ –í–°–ï –ü–†–û–ë–õ–ï–ú–´ –° –•–ê–†–î–ö–û–î–û–ú –ò–°–ü–†–ê–í–õ–ï–ù–´!")
    else:
        print("\n‚ùå –û—Å—Ç–∞–ª–∏—Å—å –ø—Ä–æ–±–ª–µ–º—ã...")

if __name__ == "__main__":
    main()